#include<stdio.h>
#include<string.h>
#include<stdlib.h> 
#define N 10
typedef struct node
{   int num;
    int cla;
	char name[30];
	struct node *next;
}Node,*LinkList;

//输入 
LinkList createlist(int n)
{ int i;
  LinkList head,pre,p;
  head=pre=(LinkList)malloc(sizeof(Node));
  for(i=0;i<10;i++)
  { p=(LinkList)malloc(sizeof(Node));
    scanf("%s %d %d",p->name,&p->num,&p->cla);
    pre->next=p;
	pre=p;
  }
  pre->next=NULL;
  return head;
}

//输出 链表所有信息 
void output(LinkList head)
{LinkList p;
 p=head->next;
 while(p!=NULL)
 {   printf("%s\t%d\t%d\t",p->name,&p->num,&p->cla);
     p=p->next;
 }
 printf("\n");
}

// 根据名字查找 ，返回学号和班级 
int search(LinkList head)
{LinkList p;
  char m[30];
  scanf("%s",m);
 p=head->next;
 while(p!=NULL)
	 if(!strcmp(p->name,m))
		 break;
	 else p=p->next;
 if(p==NULL) return 0;
 else
	 printf("%d\t%d\t",&p->num,&p->cla);
 printf("\n");
}

//根据指定位置，返回学生信息 
int mm (LinkList head,int i)
{ int j;
  LinkList p,s;
  p=head;
  j=0;
  while(p!=NULL&&j<i)
  {
  j++;
   p=p->next;
  }
    if(!p||j>i)
    return NULL;
  if(j==i)
		printf("学号:%d\t班级:%d\t姓名:%s\n",&p->num,&p->cla,p->name);
   
} 

//给定一个学生信息，插入到指定位置 
int  add(LinkList L,int k,int n)
 {  LinkList p,s; 
 	int i; 	p=L->next; 
	for(i=2;i<k;i++) 
		p=p->next;	
	s=(LinkList)malloc(sizeof(Node));//s新申请的结点 	
	printf("请输入要插入的学号: ");	
	scanf("%d",&s->num);	
    printf("请输入要插入的班级：");	
	scanf("%d",&s->cla);	
    printf("请输入要插入的姓名：");	
	scanf("%s",s->name);	
    s->next=p->next;	
    p->next=s;	
	if(k<1||k>n+2)	return 0;	 	
	else return 1;	
	}
//删除指定位置的学生信息 
 Node*de_LinkList(LinkList head,int i)
 {int j;
  LinkList p,q;
  p=head; j=1;
  while(p->next!=NULL&&j<i)
  {
  j++; p=p->next;
  }
  if(!p->next||j>i)
   return NULL;
  q=p->next; p->next=q->next;
  free(q);
  return head;
}

int main()
{
   int i,a,n,b,k;
   LinkList head;
   head=createlist(n);
   output( head);
   printf("输入指定的位置:");
   scanf("%d",&a);	
   mm(head,a);
   printf("输入插入位置：\n");
   scanf("%d",&i);
  add(head,k,n);
   printf("删除第%d个学生；\n",i);
   de_LinkList(head,i);
    output(head);
    return 0;

}
